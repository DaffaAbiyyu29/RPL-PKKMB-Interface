<style>
	.radio-buttons {
		display: flex;
		justify-content: center;
		align-items: center;
	}

	.form-check {
		margin-right: 30px; /* Adjust as needed for spacing between radio buttons */
	}

	.keterangan-field {
		flex-grow: 1;
	}
</style>

<div class="row justify-content-center mb-5">
	<div class="col-lg">
		<div class="card">
			<h5 class="card-header white-text py-4 mb-4" style="background-color: #0059AB;">
				<strong>Absensi Mahasiswa</strong>
			</h5>
			<div class="card-body pt-1 scrollable-table">
				<table class="table table-hover table-sm" style="width:100%; border: 2px solid #dee2e6; border-radius: 10px; overflow: hidden;" id="tabellist">
					<thead>
						<tr>
							<th scope="col">No</th>
							<th scope="col">No Pendaftaran</th>
							<th scope="col">Mahasiswa</th>
							<th scope="col">Jenis Kelamin</th>
							<th scope="col">Program Studi</th>
							<th scope="col">Kategori</th>
							<th scope="col">Aksi</th>
						</tr>
					</thead>
					<tbody id="tbody">
					</tbody>
				</table>
				<div class="float-end" style="margin-top: 20px;">
					<a class="btn" style="background-color: #3a4584 !important;" onclick="submitAbsensi(event)">Simpan</a>
				</div>
			</div>
		</div>
	</div>
</div>

<script>
	var nim = null;
	var selectedNoPendaftarans = [];
	//loadDataKelompok()
	loadDataAnggota()

	function loadDataAnggota() {
		var idkelompok = '@ViewBag.kmk_idkelompok';

		var hostname = "https://localhost:7087/";
		var url = hostname + "GetAnggotaKelompok?kmk_idkelompok=" + idkelompok;
		var method = "GET";
		var counter = 1;
		var detailData = []

		$.ajax({
			url: url,
			method: method,
			contentType: "application/json",
			success: function (data) {
				var item = data.data;

				$.each(item, function (key, val) {
					if (!isMahasiswaAlreadyAbsen(val.mhs_nopendaftaran)) {
						var aksi = '<div class="radio-buttons">' +
							'<div class="form-check">' +
							'<input class="form-check-input status-radio" type="radio" name="statusRadio' + counter + '" value="Hadir" id="hadir' + counter + '" data-mhs-no="' + val.mhs_nopendaftaran + '">' +
							'<label class="form-check-label" for="hadir' + counter + '">Hadir</label>' +
							'</div>' +
							'<div class="form-check">' +
							'<input class="form-check-input status-radio" type="radio" name="statusRadio' + counter + '" value="Sakit" id="sakit' + counter + '" data-mhs-no="' + val.mhs_nopendaftaran + '">' +
							'<label class="form-check-label" for="sakit' + counter + '">Sakit</label>' +
							'</div>' +
							'<div class="form-check">' +
							'<input class="form-check-input status-radio" type="radio" name="statusRadio' + counter + '" value="Izin" id="izin' + counter + '" data-mhs-no="' + val.mhs_nopendaftaran + '">' +
							'<label class="form-check-label" for="izin' + counter + '">Izin</label>' +
							'</div>' +
							'<div class="form-check">' +
							'<input class="form-check-input status-radio" type="radio" name="statusRadio' + counter + '" value="Alpa" id="alpa' + counter + '" data-mhs-no="' + val.mhs_nopendaftaran + '">' +
							'<label class="form-check-label" for="alpa' + counter + '">Alpa</label>' +
							'</div>' +
							'</div>' +
							'<div class="form-floating mb-4 keterangan-field" style="display: none;">' +
							'<textarea class="form-control" placeholder="" id="keterangan' + counter + '" name="keterangan" style="height: 100px" value="" disabled></textarea>' +
							'<label for="keterangan' + counter + '">Keterangan</label>' +
							'</div>';
						detailData.push([counter, val.mhs_nopendaftaran, val.mhs_namalengkap, val.mhs_gender, val.mhs_programstudi, val.mhs_kategori, aksi])
						counter++;
					}
				});

				$('#tabellist').DataTable({
					data: detailData,
					language: {
						search: "Cari :",
						zeroRecords: "Data Tidak Ditemukan",
						sLengthMenu: "Menampilkan _MENU_ data",
						info: "Menampilkan data ke - _START_ sampai _END_ dari _TOTAL_ data",
						infoEmpty: "Menampilkan 0 data",
						infoFiltered: "(Difilter dari _MAX_ total data)",
						paginate: {
							previous: "Sebelumnya",
							next: "Berikutnya"
						}
					}
				});

				// Event listener for radio buttons to show/hide the text area
				$('.status-radio').change(function () {
					var keteranganField = $(this).closest('tr').find('.keterangan-field');
					var textarea = keteranganField.find('textarea');

					if ($(this).val() === 'Hadir' || $(this).val() === 'Alpa') {
						keteranganField.hide();
						textarea.prop('disabled', true);
					} else {
						keteranganField.show();
						textarea.prop('disabled', false);
					}
				});

				// Add event listener to checkboxes
				$('input[type="checkbox"]').change(function () {
					var noPendaftaran = $(this).data('mhs-no');
					if (this.checked) {
						// Add to the selectedNIMs array if checked
						selectedNoPendaftarans.push(noPendaftaran);
					} else {
						// Remove from the selectedNIMs array if unchecked
						selectedNoPendaftarans = selectedNoPendaftarans.filter(function (nop) {
							return nop !== noPendaftaran;
						});
					}
				});
			},
		});
	}

	function submitAbsensi(event) {
		event.preventDefault();

		var absensiDataList = [];

		$('input[name^="statusRadio"]:checked').each(function () {
			var counter = $(this).closest('tr').find('td:first').text();

			var absensiData = {
				"abs_idabsensi": "",
				"abs_nim": '@ViewBag.UserId',
				"abs_nopendaftaran": $(this).data('mhs-no'),
				"abs_tglkehadiran": new Date().toISOString(), 
				"abs_statuskehadiran": $(this).val(),
				"abs_keterangan": getKeteranganValue(counter),
				"abs_idpkkmb": 1,
				"abs_status": "Aktif"
			};

			absensiDataList.push(absensiData);
		});

		if (absensiDataList.length === 0) {
			// No radio button is checked
			Swal.fire({
				position: "top-end",
				icon: "warning",
				title: "Pilih setidaknya satu status kehadiran.",
				text: "Anda perlu memilih status kehadiran untuk minimal satu mahasiswa.",
				showConfirmButton: false,
				timer: 2000,
			});
			return;
		}

		var payload = absensiDataList;

		var hostname = "https://localhost:7087/";
		var url = hostname + "TambahAbsensi";
		var method = "POST";

		$.ajax({
			url: url,
			method: method,
			data: JSON.stringify(payload),
			contentType: "application/json",
			success: function (data) {
				Swal.fire({
					position: "top-end",
					icon: "success",
					title: "Berhasil Menambahkan Absensi.",
					showConfirmButton: false,
					timer: 2000,
				}).then(() => {
					window.location.href = "/Absensi"
				});
			},
			error: function (xhr, status) {
				console.error("AJAX request error:", status);
				console.log("Server response:", xhr.responseJSON);
				// Handle the error as needed, show an alert, log, etc.
				Swal.fire({
					icon: "error",
					title: "Gagal Menambahkan Absensi.",
					text: "Terjadi kesalahan saat mengirim data absensi.",
				});
			},
		});
	}

	function getKeteranganValue(counter) {
		var statusRadio = $('input[name="statusRadio' + counter + '"]:checked');
		var keteranganField = statusRadio.closest('tr').find('.keterangan-field');

		if (statusRadio.val() === 'Hadir' || statusRadio.val() === 'Alpa') {
			// If Hadir or Alpa, set keterangan to an empty string
			return "";
		} else {
			// Otherwise, use the value from the textarea
			return keteranganField.find('textarea').val() || null;
		}
	}

	function isMahasiswaAlreadyAbsen(mahasiswaNoPendaftaran) {
		var today = new Date().toISOString().split('T')[0];
		var url = `https://localhost:7087/GetAbsensiByTanggal?abs_tglkehadiran=${today}`;

		var isAlreadyAbsen = false;

		$.ajax({
			url: url,
			method: "GET",
			contentType: "application/json",
			async: false, // Tunggu hasilnya sebelum melanjutkan
			success: function (data) {
				var absensiData = data.data;
				isAlreadyAbsen = absensiData.some(function (absen) {
					return absen.abs_nopendaftaran === mahasiswaNoPendaftaran;
				});
			},
		});

		return isAlreadyAbsen;
	}
</script>