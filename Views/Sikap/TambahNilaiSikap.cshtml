@{
}

<div class="row justify-content-center mb-5">
	<div class="col-lg-8">
		<div class="card">
			<h5 class="card-header text-center white-text py-4 mb-4" style="background-color: #0059AB;">
				<strong>Tambah Nilai Sikap</strong>
			</h5>
			<div class="card-body px-lg-5 pt-0">
				<div class="row">
					<div class="col-md-6">
						<!-- First Column -->
						<div class="input-group has-validation mb-4 nama">
							<div class="form-floating is-invalid">
								<select class="form-control is-invalid" id="nama" name="nama" data-target="validateField" required>
									<option selected disabled>Pilih Mahasiswa</option>
								</select>
								<label for="nama">Mahasiswa</label>
								<div class="invalid-feedback" data-target="validateLabel">* Pilih Mahasiswa.</div>
							</div>
						</div>
						<div class="input-group has-validation mb-4 namakelompok">
							<div class="form-floating is-invalid">
								<input type="text" class="form-control" maxlength="100" id="namakelompok" name="namakelompok" data-target="validateField" placeholder="" readonly>
								<label for="floatingInputGrid">Kelompok</label>
								<div class="invalid-feedback" data-target="validateLabel">* Masukkan Nama Kelompok.</div>
							</div>
						</div>
					</div>
					<div class="col-md-6">
						<!-- Second Column -->
						<div class="input-group has-validation mb-4 tanggal">
							<div class="form-floating is-invalid">
								<input type="datetime-local" class="form-control is-invalid" id="tanggal" name="tanggal" data-target="validateField" placeholder="">
								<label for="validateField">Hari / Tanggal</label>
								<div class="invalid-feedback" data-target="validateLabel">* Masukkan Hari / Tanggal.</div>
							</div>
						</div>
						<div class="input-group has-validation mb-4 nilaisikap">
							<div class="form-floating is-invalid">
								<select class="form-select is-invalid" id="nilaisikap" name="nilaisikap" data-target="validateField" aria-label="">
									<option selected disabled>Pilih Kategori Nilai</option>
									<option value="A">A</option>
									<option value="B">B</option>
									<option value="C">C</option>
									<option value="D">D</option>
								</select>
								<label for="floatingSelect">Kategori Nilai</label>
								<div class="invalid-feedback" data-target="validateLabel">* Masukkan Kategori Nilai.</div>
							</div>
						</div>
					</div>
				</div>
				<button class="btn btn-rounded btn-block my-4 white-text font-weight-bold waves-effect z-depth-0" Style="background-color: #0059AB;" onclick="tambahnilaisikap(event)">Simpan</button>
			</div>
		</div>
	</div>
</div>

<script>
	function NamaMahasiswa() {
		var hostname = "https://localhost:7087/";
		var url = hostname + "getallmahasiswa";
		var method = "GET";

		$.ajax({
			url: url,
			type: method,
			dataType: "json",
			success: function (response) {
				NamaDropDown(response.data);
			},
			error: function (xhr, status, error) {
				console.log('Error fetching data:', error);
				console.log(xhr.responseJSON);
			}
		});
	}

	function NamaDropDown(data) {
		var dropdown = $('#nama');
		dropdown.empty();

		// Tambahkan opsi default "Pilih Mahasiswa"
		dropdown.append($('<option selected disabled></option>').val('').text('Pilih Mahasiswa'));

		var options = $.map(data, function (item) {
			return $('<option></option>').val(item.mhs_nopendaftaran).text(item.mhs_namalengkap);
		});

		dropdown.append(options);

		dropdown.on('change', function () {
			var noPendaftaran = $(this).val();
			KelompokID(noPendaftaran, data);
		});
	}

	function KelompokID(noPendaftaran, data) {
		console.log('Selected Nopendaftaran:', noPendaftaran);

		var Mhs = data.find(function (item) {
			return item.mhs_nopendaftaran === noPendaftaran;
		});
		console.log('Selected Mahasiswa:', Mhs);
		if (Mhs) {
			var idKelompok = Mhs.mhs_idkelompok;
			getNamaKelompok(idKelompok);
		} else {
			console.log('Mahasiswa not found for nopendaftaran:', noPendaftaran);
		}
	}

	function getNamaKelompok(idKelompok) {
		var hostname = "https://localhost:7087/";
		var url = hostname + "GetAllKelompok";
		var method = "GET";

		$.ajax({
			url: url,
			type: method,
			dataType: "json",
			success: function (response) {
				if (response && response.data && Array.isArray(response.data)) {
					var kelompok = response.data.find(function (item) {
						return item.kmk_idkelompok === idKelompok;
					});

					if (kelompok) {
						console.log('Nama Kelompok:', kelompok.kmk_namakelompok);
						$('#namakelompok').val(kelompok.kmk_namakelompok);
					} else {
						console.log('Kelompok not found for idKelompok:', idKelompok);
						// Mengosongkan nilai jika idKelompok kosong
						$('#namakelompok').val('');
					}
				} else {
					console.log('Invalid response format or missing data property:', response);
				}
			},
			error: function (xhr, status, error) {
				console.log('Error fetching kelompok data:', error);
				console.log(xhr.responseJSON);
			}
		});
	}
	$(document).ready(function () {
		NamaMahasiswa();
	});
</script>
<script>
	function tambahnilaisikap(event) {
		event.preventDefault();

		var nls_nopendaftaran = document.getElementsByName("nama")[0].value;
		var nls_sikap = document.getElementsByName("nilaisikap")[0].value;
		var nls_tanggal = document.getElementsByName("tanggal")[0].value;

		if (nls_nopendaftaran.trim() === '' || nls_sikap.trim() === '' || nls_tanggal.trim() === '') {
			Swal.fire({
				position: "top-end",
				icon: "error",
				title: "Lengkapi Semua Fields",
				showConfirmButton: false,
				timer: 2000
			});
			return;
		}

		var hostname = "https://localhost:7087";
		var url = hostname + "/InsertNilaiSikap";
		var method = "POST";
		var input = {
			nls_idnilaisikap: "",
			nls_nopendaftaran: nls_nopendaftaran,
			nls_nim: "@ViewBag.UserId",
			nls_sikap: nls_sikap,
			nls_tanggal: nls_tanggal,
			nls_jamplus: 0,
			nls_jamminus: 0,
			nls_deskripsi: "",
			nls_status: "Aktif"
		};

		var data = JSON.stringify(input);

		$.ajax({
			url: url,
			method: method,
			data: data,
			contentType: "application/json",
			success: function (data) {
				console.log('Data from server:', data);
				if (data.status === 200) {
					Swal.fire({
						position: "top-end",
						icon: "success",
						title: "Nilai Sikap  berhasil ditambahkan",
						showConfirmButton: false,
						timer: 2000
					}).then(() => {
						window.location.href = '/sikap/index';
					});
				} else {
					Swal.fire({
						position: "top-end",
						icon: "error",
						title: "Gagal menyimpan data.",
						showConfirmButton: false,
						timer: 2000
					})
					console.log('Insert failed. Server response:', data);
				}
			},
			error: function (xhr, status, error) {
				Swal.fire({
					position: "top-end",
					icon: "error",
					title: xhr.responseJSON.message,
					showConfirmButton: false,
					timer: 2000
				})
				console.log('Error saving data:', error);
				console.log(xhr.responseJSON);
				console.log(status);
			}
		});
	}
</script>
<script>
	var inputFields = document.querySelectorAll('[data-target="validateField"]');
	var validationMessage = document.querySelectorAll('[data-target="validateLabel"]');
	inputFields.forEach(function (inputField) {
		inputField.addEventListener('input', function () {
			if (inputField.value.trim() !== '') {
				inputField.classList.remove('is-invalid');

			} else {
				inputField.classList.add('is-invalid');

			}
		});

		inputField.addEventListener('focus', function () {
			if (inputField.value.trim() === '') {

			}
		});

		inputField.addEventListener('blur', function () {
			if (inputField.value.trim() !== '') {

			}
		});
	});
</script>
